plugins {
    id 'org.springframework.boot' version '2.2.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

allprojects {

    group = 'com.yanxin'
    version = '1.0-SNAPSHOT'
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        jcenter()
    }
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
    ext {
        set('springBootVersion', "2.2.9.RELEASE")
        set('springCloudAlibabaVersion', "2.2.1.RELEASE")
        set('springCloudVersion', "Hoxton.SR2")
        set('lombokVersion', "1.18.12")
    }
    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
        // 排除 tomcat 依赖（使用 undertow）
        implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-undertow'
        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }

    jar {
        enabled = true
    }

    test {
        useJUnitPlatform()
        ignoreFailures = true
    }

    /**
     * clean 命令时删除 logs 目录
     */
    task cleanOutDir(type: Delete) {
        delete "${projectDir}/logs"
        delete "${rootDir}/logs"
    }
    tasks.clean.dependsOn(cleanOutDir)

    /**
     * 根据环境打包默认dev开发环境，命令：./gradlew -x test clean bootJar -Denv=dev
     */
    def env = System.getProperty("env") ?: "dev"
    processResources {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [env: env]
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                snapshotRepository(url: "http://192.168.3.89:8081/repository/maven-snapshots/") {
                    authentication(userName: "admin", password: "4b1HDSHmwyPxDTWP")
                }
                repository(url: "http://192.168.3.89:8081/repository/maven-releases/") {
                    authentication(userName: "admin", password: "4b1HDSHmwyPxDTWP")
                }
            }
        }
    }
}

